/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TampilanProjek;



import static TampilanProjek.ConnectionDB.conn;
import static TampilanProjek.ConnectionDB.jdbc_Driver;
import com.mysql.jdbc.Statement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author My MSI
 */
public class DataForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form DataForm
     */
    
    String sql = "Select * From kendaraan"; //String variabel global untuk memilih sebuah tabel dari database
    
    
    public DataForm() {
        initComponents();
        showTable(sql); //Method untuk menampilkan Data
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableData = new javax.swing.JTable();
        menuUtamaBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        namaTxt = new javax.swing.JTextField();
        Cari = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tujuanTxt = new javax.swing.JTextField();
        refresh = new javax.swing.JButton();
        hapusBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();

        TableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Kendaraan", "Merk Kendaraan", "Tujuan", "Kecepatan", "Waktu", "Jarak", "Nama Pemilik", "id_user"
            }
        ));
        TableData.setEnabled(false);
        jScrollPane1.setViewportView(TableData);

        menuUtamaBtn.setText("Menu Utama");
        menuUtamaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuUtamaBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("Cari Data");

        jLabel4.setText("Nama Pemilik");

        Cari.setText("Cari");
        Cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CariActionPerformed(evt);
            }
        });

        jLabel1.setText("Tujuan");

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        hapusBtn.setText("Hapus");
        hapusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("Hapus Data");

        jLabel5.setText("User ID");

        updateBtn.setText("Update Data");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(314, 314, 314)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(264, 264, 264))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(namaTxt)
                            .addComponent(tujuanTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Cari, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(210, 210, 210)
                                        .addComponent(hapusBtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(109, 109, 109)
                                        .addComponent(jLabel5)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(menuUtamaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(393, 393, 393))))))
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(600, 600, 600)
                        .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(418, 418, 418)
                        .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(namaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(tujuanTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(hapusBtn)))
                        .addGap(28, 34, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cari)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(8, 8, 8)
                .addComponent(refresh)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuUtamaBtn)
                    .addComponent(updateBtn))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuUtamaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuUtamaBtnActionPerformed
        OptionMenu optionMenu = new OptionMenu();
        optionMenu.setVisible(true);
        this.getDesktopPane().add(optionMenu);
        this.dispose();
                       
    }//GEN-LAST:event_menuUtamaBtnActionPerformed

    private void CariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CariActionPerformed
        if(namaTxt.getText().isEmpty() && tujuanTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, 
                    "Masuukan DATA yang ingin di Cari",
                    "ERROR",JOptionPane.ERROR_MESSAGE);
            showTable(sql);
        }else if(namaTxt.getText().isEmpty()){
            //kode untuk mencari berdasarkan Tujuan
            showTable("SELECT * FROM kendaraan WHERE Tujuan LIKE '%"+tujuanTxt.getText()+"%'");
        } else if (tujuanTxt.getText().isEmpty()){
            showTable("SELECT * FROM kendaraan WHERE Nama_Pemilik LIKE '%"+namaTxt.getText()+"%'");
        }else if(namaTxt.getText().isEmpty()){
            //kode untuk mencari berdasarkan nama pemilik
            showTable("SELECT * FROM kendaraan WHERE Tujuan LIKE '%"+tujuanTxt.getText()+"%'");
        }else{
            //kode untuk mencari berdasarkan nama dan Tujuan
            showTable("SELECT * FROM kendaraan WHERE Nama_Pemilik LIKE '%"
                    +namaTxt.getText()+"%' AND Tujuan LIKE '%"
                    +tujuanTxt.getText()+"%'");
        }
    }//GEN-LAST:event_CariActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        namaTxt.setText("");
        tujuanTxt.setText("");
        user.setText("");
        showTable(sql);
    }//GEN-LAST:event_refreshActionPerformed

    private void hapusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusBtnActionPerformed
         if(user.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, 
                    "Masuukan DATA yang ingin di Hapus",
                    "ERROR",JOptionPane.ERROR_MESSAGE);
            showTable(sql);
        } else {
            String id = user.getText();
            String SQL = "DELETE FROM kendaraan WHERE id_User = '"+id+"' ";

            try {
                Class.forName(jdbc_Driver);  // Class.forName untuk registrasiclass driver dan melakukan intansiasi
            }  catch (Exception e) {
                JOptionPane.showMessageDialog(null,"JDBC Driver Gagal","JDBC Driver Error",JOptionPane.WARNING_MESSAGE);
            }

            Statement stmt = null;
            Connection con = null;
            
            //try pernyataan memungkinkan untuk menentukan blok kode yang akan diuji untuk kesalahan ketika sedang dijalankan.
            //catch pernyataan memungkinkan untuk menentukan blok kode yang akan dieksekusi, jika terjadi kesalahan dalam blok try.
        
            //Membuat Koneksi ke database
            try {
                stmt = (Statement) conn.createStatement();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,"Koneksi Gagal","Connection Error",JOptionPane.WARNING_MESSAGE);
            }
            //Menjalankan SQL untuk menghapus Catatan
            try {
                //untuk perintah INSERT, UPDATE, DELETE methode eksekusi yang digunakan adalah executeUpdate().
                stmt.executeUpdate(SQL);
                //untuk SQL bila berhasil
                JOptionPane.showMessageDialog(rootPane,"Data Berhasil Terhapus","Delete Successful",JOptionPane.WARNING_MESSAGE);
            } catch (Exception e) {
                //untuk SQL bila gagal
                JOptionPane.showMessageDialog(rootPane,"Data Gagal Terhapus","Warning",JOptionPane.WARNING_MESSAGE);
            }
        }
        showTable(sql);
        user.setText("");
    }//GEN-LAST:event_hapusBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        UpdateForm update = new UpdateForm();
        update.setVisible(true);
        this.getDesktopPane().add(update);
        this.dispose();
    }//GEN-LAST:event_updateBtnActionPerformed
    public final void showTable(String sql){
        //try pernyataan memungkinkan untuk menentukan blok kode yang akan diuji untuk kesalahan ketika sedang dijalankan.
        //catch pernyataan memungkinkan untuk menentukan blok kode yang akan dieksekusi, jika terjadi kesalahan dalam blok try.
        try{
            //Object Statement digunakan untuk pengiriman statement SQL tanpa parameter serta Setiap SQL statement yang dieksekusi dikirim secara utuh ke database. 
            Statement stat =(Statement)ConnectionDB.connectDatabase().createStatement();
            //Methode eksekusi yang digunakan untuk perintah SQL SELECT methode eksekusi yang digunakan adalah executeQery() dengan nilai kembaliannya adalah ResultSet
            ResultSet rs = stat.executeQuery(sql);
            DefaultTableModel tabelkosong;
            tabelkosong = (DefaultTableModel)TableData.getModel();
            tabelkosong.getDataVector().removeAllElements();
            while(rs.next()){
                tabelkosong.addRow(new Object[]{
                    rs.getString(1), rs.getString(2), rs.getString(3),
                    rs.getString(4), rs.getString(5), rs.getString(6),
                    rs.getString(7),rs.getString(8)}
            );
            }
        } catch(SQLException ex){
            Logger.getLogger(DataForm.class.getName()).log(Level.SEVERE,null,ex);
        
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cari;
    private javax.swing.JTable TableData;
    private javax.swing.JButton hapusBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton menuUtamaBtn;
    private javax.swing.JTextField namaTxt;
    private javax.swing.JButton refresh;
    private javax.swing.JTextField tujuanTxt;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
